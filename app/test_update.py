from app.ati_client import update_cargo
from app.transformers.ati_transformer import prepare_order_for_ati
from app.models import Order
from app.database import SessionLocal

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
db = SessionLocal()

# –í—ã–±–∏—Ä–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É –∏–∑ –ë–î
selected_order = db.query(Order).filter(Order.external_no == "–¢–ù0001212285").first()

if not selected_order or not selected_order.cargo_id:
    print("‚ùå –û—à–∏–±–∫–∞: –∑–∞—è–≤–∫–∞ –¢–ù0001212285 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î –∏–ª–∏ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ ATI!")
    db.close()
    exit()

# üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º `order` –≤ `cargo_data`, –∫–∞–∫ –≤ `publish_cargo()`
cargo_data = prepare_order_for_ati(selected_order)

# üîÑ –î–æ–±–∞–≤–ª—è–µ–º `cargo_id`, —Ç–∞–∫ –∫–∞–∫ `prepare_order_for_ati()` –µ–≥–æ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç
cargo_data["cargo_id"] = selected_order.cargo_id

print("DEBUG cargo_data:", cargo_data)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
update_response = update_cargo(cargo_data)

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏:", update_response)

db.close()